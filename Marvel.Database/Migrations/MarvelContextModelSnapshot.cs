// <auto-generated />
using System;
using Marvel.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marvel.Database.Migrations
{
    [DbContext(typeof(MarvelContext))]
    partial class MarvelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marvel.Database.Models.Character", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Character", (string)null);
                });

            modelBuilder.Entity("Marvel.Database.Models.CharacterComic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("ComicID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharacterID");

                    b.HasIndex("ComicID");

                    b.ToTable("CharacterComic", (string)null);
                });

            modelBuilder.Entity("Marvel.Database.Models.Comic", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DigitalId")
                        .HasColumnType("int");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("IssueNumber")
                        .HasColumnType("float");

                    b.Property<int?>("PageCount")
                        .HasColumnType("int");

                    b.Property<string>("ResourceURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariantDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Comic", (string)null);
                });

            modelBuilder.Entity("Marvel.Database.Models.DownloadLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("DownloadDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DownloadLog", (string)null);
                });

            modelBuilder.Entity("Marvel.Database.Models.CharacterComic", b =>
                {
                    b.HasOne("Marvel.Database.Models.Character", "Character")
                        .WithMany("CharacterComics")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marvel.Database.Models.Comic", "Comic")
                        .WithMany("CharacterComics")
                        .HasForeignKey("ComicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Comic");
                });

            modelBuilder.Entity("Marvel.Database.Models.Character", b =>
                {
                    b.Navigation("CharacterComics");
                });

            modelBuilder.Entity("Marvel.Database.Models.Comic", b =>
                {
                    b.Navigation("CharacterComics");
                });
#pragma warning restore 612, 618
        }
    }
}
